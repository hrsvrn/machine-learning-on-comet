[
  { "input": "Print the first column of the file data.txt", "output": "awk '{print $1}' data.txt" },
  { "input": "Display the second column of file.csv", "output": "awk -F',' '{print $2}' file.csv" },
  { "input": "Print all lines where the third column is greater than 100", "output": "awk '$3 > 100' data.txt" },
  { "input": "Print only the lines containing the word 'error'", "output": "awk '/error/' log.txt" },
  { "input": "Print the line number and the line", "output": "awk '{print NR, $0}' file.txt" },
  { "input": "Print the last column of each line", "output": "awk '{print $NF}' data.txt" },
  { "input": "Print lines where the second field is 'admin'", "output": "awk '$2 == \"admin\"' users.txt" },
  { "input": "Sum values in the second column", "output": "awk '{sum += $2} END {print sum}' data.txt" },
  { "input": "Print line if it contains more than 5 fields", "output": "awk 'NF > 5' file.txt" },
  { "input": "Count the number of lines in file.txt", "output": "awk 'END {print NR}' file.txt" },

  { "input": "Print the first and third fields separated by a dash", "output": "awk '{print $1 \"-\" $3}' file.txt" },
  { "input": "Print every even numbered line", "output": "awk 'NR % 2 == 0' file.txt" },
  { "input": "Print the lines from line 5 to line 10", "output": "awk 'NR>=5 && NR<=10' file.txt" },
  { "input": "Print total of the third column", "output": "awk '{sum+=$3} END {print sum}' data.txt" },
  { "input": "Skip the header and print second column", "output": "awk 'NR > 1 {print $2}' file.csv" },
  { "input": "Replace all spaces with dashes", "output": "awk '{gsub(/ /,\"-\"); print}' file.txt" },
  { "input": "Print only unique values from the first column", "output": "awk '!seen[$1]++' data.txt" },
  { "input": "Print the number of fields in each line", "output": "awk '{print NF}' file.txt" },
  { "input": "Print lines where the length is greater than 20", "output": "awk 'length($0) > 20' file.txt" },
  { "input": "Print lines that begin with 'ERROR'", "output": "awk '/^ERROR/' log.txt" },

  { "input": "Print all lines except the first", "output": "awk 'NR>1' file.txt" },
  { "input": "Print the filename and the number of lines in it", "output": "awk 'END {print FILENAME, NR}' file.txt" },
  { "input": "Print first column from all .log files", "output": "awk '{print $1}' *.log" },
  { "input": "Print lines where the first column is not empty", "output": "awk '$1 != \"\"' file.txt" },
  { "input": "Print only lines with exactly 3 fields", "output": "awk 'NF == 3' file.txt" },
  { "input": "Print fields in reverse order", "output": "awk '{for(i=NF;i>=1;i--) printf $i\" \"; print \"\"}' file.txt" },
  { "input": "Print only the header row", "output": "awk 'NR==1' file.csv" },
  { "input": "Double the second column value and print", "output": "awk '{print $2 * 2}' file.txt" },
  { "input": "Print the 2nd and 4th columns", "output": "awk '{print $2, $4}' file.txt" },
  { "input": "Print all rows where field 3 contains 'pass'", "output": "awk '$3 ~ /pass/' file.txt" },

  { "input": "Print last 5 lines of file.txt", "output": "awk '{a[NR]=$0} END {for (i=NR-4;i<=NR;i++) print a[i]}' file.txt" },
  { "input": "Find the maximum value in the third column", "output": "awk 'max < $3 {max=$3} END {print max}' file.txt" },
  { "input": "Find the average of column 2", "output": "awk '{sum += $2} END {print sum/NR}' file.txt" },
  { "input": "Print all lines that contain numbers", "output": "awk '/[0-9]/' file.txt" },
  { "input": "Print all lines where field 1 contains only digits", "output": "awk '$1 ~ /^[0-9]+$/' file.txt" },
  { "input": "Print first field in uppercase", "output": "awk '{print toupper($1)}' file.txt" },
  { "input": "Print date and message from log file", "output": "awk '{print $1, $5}' log.txt" },
  { "input": "Print line if third field is either 'yes' or 'no'", "output": "awk '$3 == \"yes\" || $3 == \"no\"' data.txt" },
  { "input": "Print sum of values in column 1 if greater than 10", "output": "awk '$1 > 10 {sum+=$1} END {print sum}' file.txt" },
  { "input": "Print line and length of the line", "output": "awk '{print $0, length($0)}' file.txt" },

  { "input": "Print lines if first field matches '^[a-zA-Z]$'", "output": "awk '$1 ~ /^[a-zA-Z]$/' file.txt" },
  { "input": "Filter rows where second column equals 0", "output": "awk '$2 == 0' data.txt" },
  { "input": "Print total and average of column 4", "output": "awk '{t+=$4} END {print t, t/NR}' file.txt" },
  { "input": "Skip lines containing 'debug'", "output": "awk '!/debug/' log.txt" },
  { "input": "Print line numbers of lines with word 'error'", "output": "awk '/error/ {print NR}' log.txt" },
  { "input": "Print 3rd field only if 2nd field is 'active'", "output": "awk '$2 == \"active\" {print $3}' file.txt" },
  { "input": "Print time from log entries", "output": "awk '{print $2}' access.log" },
  { "input": "Replace commas with spaces in each line", "output": "awk '{gsub(\",\", \" \"); print}' file.txt" },
  { "input": "Print total characters in file.txt", "output": "awk '{c += length($0)} END {print c}' file.txt" },
  { "input": "Print first 10 lines", "output": "awk 'NR <= 10' file.txt" },

  { "input": "Print full name from two columns", "output": "awk '{print $1 \" \" $2}' names.txt" },
  { "input": "Add row number to each line", "output": "awk '{print NR \": \" $0}' file.txt" },
  { "input": "Convert lowercase to uppercase in column 2", "output": "awk '{print toupper($2)}' file.txt" },
  { "input": "Print fields if line starts with 'user:'", "output": "awk '/^user:/ {print $2, $3}' file.txt" },
  { "input": "Print only lines that don't start with '#'", "output": "awk '!/^#/' config.txt" },
  { "input": "Check if line starts with a digit", "output": "awk '/^[0-9]/' file.txt" },
  { "input": "Extract domain from email field", "output": "awk -F'@' '{print $2}' emails.txt" },
  { "input": "Print column 3 in scientific notation", "output": "awk '{printf \"%e\\n\", $3}' file.txt" },
  { "input": "Format output as CSV", "output": "awk '{print $1\",\"$2\",\"$3}' data.txt" },
  { "input": "Print all lines longer than 30 characters", "output": "awk 'length > 30' file.txt" },

  { "input": "Pad column 1 with zeros", "output": "awk '{printf \"%05d\\n\", $1}' file.txt" },
  { "input": "Print column 2 if column 1 equals 'ERROR'", "output": "awk '$1 == \"ERROR\" {print $2}' log.txt" },
  { "input": "Print date and user from CSV", "output": "awk -F',' '{print $1, $3}' records.csv" },
  { "input": "Convert tabs to commas", "output": "awk '{gsub(\"\t\", \",\"); print}' file.txt" },
  { "input": "Add 100 to each number in column 2", "output": "awk '{$2 += 100; print}' file.txt" },
  { "input": "Print header and lines where value > 1000", "output": "awk 'NR==1 || $2 > 1000' data.csv" },
  { "input": "Print file with line numbers, skipping comments", "output": "awk '!/^#/ {print NR, $0}' file.txt" },
  { "input": "Sort by second column numerically", "output": "awk '{print $2, $0}' file.txt | sort -n" },
  { "input": "Calculate product of values in column 1", "output": "awk '{p *= $1} END {print p}' file.txt" },
  { "input": "Extract IPv4 addresses from text", "output": "awk '/[0-9]+(\\.[0-9]+){3}/' file.txt" }
]
