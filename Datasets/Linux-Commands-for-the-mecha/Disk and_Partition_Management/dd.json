[
  { "input": "Create a bootable USB from ISO file", "output": "dd if=ubuntu.iso of=/dev/sdX bs=4M status=progress oflag=sync" },
  { "input": "Backup MBR of disk", "output": "dd if=/dev/sda of=mbr_backup.img bs=512 count=1" },
  { "input": "Write zeros to an entire disk", "output": "dd if=/dev/zero of=/dev/sdX bs=1M" },
  { "input": "Create a 1GB file with zeros", "output": "dd if=/dev/zero of=zero_file.img bs=1M count=1024" },
  { "input": "Create an ISO image from CD-ROM", "output": "dd if=/dev/cdrom of=cd_image.iso bs=2048" },
  { "input": "Clone entire hard disk", "output": "dd if=/dev/sda of=/dev/sdb bs=64K conv=noerror,sync" },
  { "input": "Test write speed of disk", "output": "dd if=/dev/zero of=testfile bs=1G count=1 oflag=dsync" },
  { "input": "Securely wipe a drive using random data", "output": "dd if=/dev/urandom of=/dev/sdX bs=1M" },
  { "input": "Create a 100MB empty file", "output": "dd if=/dev/zero of=empty.img bs=1M count=100" },
  { "input": "Restore disk from image file", "output": "dd if=backup.img of=/dev/sdX bs=4M" },

  { "input": "Make a bootable SD card from image", "output": "dd if=raspbian.img of=/dev/mmcblk0 bs=4M status=progress" },
  { "input": "Copy 10 blocks of 1KB from file", "output": "dd if=input.txt of=output.txt bs=1K count=10" },
  { "input": "Skip first 512 bytes when copying", "output": "dd if=file.bin of=out.bin bs=512 skip=1" },
  { "input": "Read from device without output", "output": "dd if=/dev/sda of=/dev/null bs=1M" },
  { "input": "Truncate file by overwriting with zeroes", "output": "dd if=/dev/zero of=file.txt bs=1K count=1 conv=notrunc" },
  { "input": "Backup a USB stick", "output": "dd if=/dev/sdb of=usb_backup.img bs=4M" },
  { "input": "Create a sparse file", "output": "dd if=/dev/zero of=sparse.img bs=1 count=0 seek=1G" },
  { "input": "Extract specific part of file", "output": "dd if=largefile of=part.bin bs=1 skip=1048576 count=1024" },
  { "input": "Wipe free space with zeros", "output": "dd if=/dev/zero of=zero.fill bs=1M; rm zero.fill" },
  { "input": "Convert text file to uppercase", "output": "dd if=text.txt of=out.txt conv=ucase" },

  { "input": "Create a 10MB random file", "output": "dd if=/dev/urandom of=random.bin bs=1M count=10" },
  { "input": "Benchmark disk read speed", "output": "dd if=/dev/sda of=/dev/null bs=4M count=100" },
  { "input": "Burn an ISO to CD", "output": "dd if=linux.iso of=/dev/cdrom bs=2K" },
  { "input": "Fill disk with data until full", "output": "dd if=/dev/zero of=fillfile bs=1M" },
  { "input": "Copy file with progress bar", "output": "dd if=source.dat of=dest.dat bs=4M status=progress" },
  { "input": "Write image to SD card", "output": "dd if=boot.img of=/dev/mmcblk0 bs=1M" },
  { "input": "Make exact image of disk", "output": "dd if=/dev/sda of=disk.img bs=512" },
  { "input": "Write a binary blob to EEPROM", "output": "dd if=eeprom.bin of=/dev/i2c-1 bs=1" },
  { "input": "Copy image skipping 1st 2MB", "output": "dd if=image.iso of=/dev/sdX bs=1M skip=2" },
  { "input": "Write zeros with sync", "output": "dd if=/dev/zero of=/dev/sdX bs=1M conv=fdatasync" },

  { "input": "Overwrite drive multiple times", "output": "for i in {1..3}; do dd if=/dev/urandom of=/dev/sdX bs=1M; done" },
  { "input": "Split image into 100MB chunks", "output": "dd if=big.img bs=100M count=1 | split -b 100M - part_" },
  { "input": "Recreate image from chunks", "output": "cat part_* > big.img" },
  { "input": "Skip 100MB of input file", "output": "dd if=input.img of=out.img bs=1M skip=100" },
  { "input": "Copy file and remove carriage returns", "output": "dd if=input.txt of=output.txt conv=notrunc,unblock" },
  { "input": "Backup entire boot sector", "output": "dd if=/dev/sda of=bootsector.bin bs=512 count=1" },
  { "input": "Create a raw floppy image", "output": "dd if=/dev/fd0 of=floppy.img bs=1440k" },
  { "input": "Copy a CD image to file", "output": "dd if=/dev/cdrom of=disc.iso bs=2048" },
  { "input": "Create 512-byte file", "output": "dd if=/dev/zero of=block512.img bs=512 count=1" },
  { "input": "Extract MBR to file", "output": "dd if=/dev/sda of=mbr.bin bs=446 count=1" },

  { "input": "Copy binary file and strip metadata", "output": "dd if=file.bin of=clean.bin bs=1 conv=sync,noerror" },
  { "input": "Create 5GB empty file", "output": "dd if=/dev/zero of=empty5gb.img bs=1G count=5" },
  { "input": "Write image using 2MB block size", "output": "dd if=image.iso of=/dev/sdX bs=2M status=progress" },
  { "input": "Clone /dev/sdb to image file", "output": "dd if=/dev/sdb of=disk_backup.img bs=4M" },
  { "input": "Simulate disk read with /dev/null", "output": "dd if=/dev/sda of=/dev/null bs=512" },
  { "input": "Create a blank 200MB image", "output": "dd if=/dev/zero of=blank.img bs=1M count=200" },
  { "input": "Overwrite beginning of file", "output": "dd if=newheader.bin of=oldfile.img conv=notrunc" },
  { "input": "Append binary data to file", "output": "dd if=tail.bin >> fullfile.img" },
  { "input": "Backup LVM volume", "output": "dd if=/dev/mapper/vg-lv of=lvm_backup.img bs=1M" },
  { "input": "Create file with 100 null bytes", "output": "dd if=/dev/zero of=100bytes bs=100 count=1" },

  { "input": "Remove all data from partition", "output": "dd if=/dev/zero of=/dev/sdX1 bs=512" },
  { "input": "Create test file with pattern", "output": "yes | tr -d '\\n' | dd bs=1024 count=100 of=testfile" },
  { "input": "Measure write performance", "output": "dd if=/dev/zero of=write.test bs=8k count=100000 conv=fdatasync" },
  { "input": "Dump memory to file", "output": "dd if=/dev/mem of=memory.dump bs=1024" },
  { "input": "Read 10MB from raw image", "output": "dd if=raw.img of=output.img bs=1M count=10" },
  { "input": "Clone USB drive", "output": "dd if=/dev/sdb of=/dev/sdc bs=4M" },
  { "input": "Create floppy disk image", "output": "dd if=/dev/fd0 of=floppy.img bs=1440k" },
  { "input": "Strip padding from binary", "output": "dd if=input.bin of=output.bin bs=512 count=1 conv=notrunc" },
  { "input": "Test reading SSD", "output": "dd if=/dev/nvme0n1 of=/dev/null bs=1M" },
  { "input": "Fill file with ones (converted)", "output": "yes | tr -d '\\n' | dd of=ones.txt bs=1M count=1" },

  { "input": "Quick format by zeroing start", "output": "dd if=/dev/zero of=/dev/sdX bs=1M count=100" },
  { "input": "Create 50MB swap file", "output": "dd if=/dev/zero of=/swapfile bs=1M count=50" },
  { "input": "Copy only 1GB from disk", "output": "dd if=/dev/sda of=partial.img bs=1M count=1024" },
  { "input": "Copy partition image to USB", "output": "dd if=partition.img of=/dev/sdb bs=4M status=progress" },
  { "input": "Dump physical memory", "output": "dd if=/dev/mem of=physmem.bin bs=4096" },
  { "input": "Create 10K file with /dev/zero", "output": "dd if=/dev/zero of=zero10k.img bs=1K count=10" },
  { "input": "Get first 100 bytes from file", "output": "dd if=input.txt of=first100 bs=1 count=100" },
  { "input": "Copy 1 block and skip 5", "output": "dd if=file.bin of=output.bin bs=1 count=1 skip=5" },
  { "input": "Skip first 1MB of ISO", "output": "dd if=ubuntu.iso of=ubuntu_trimmed.iso bs=1M skip=1" },
  { "input": "Clone partition with dd", "output": "dd if=/dev/sda1 of=/dev/sdb1 bs=4M" }
]
