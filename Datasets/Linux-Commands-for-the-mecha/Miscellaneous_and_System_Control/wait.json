[
  { "input": "Wait for all background jobs to finish", "output": "wait" },
  { "input": "Start two background processes and wait for both", "output": "sleep 2 & sleep 3 & wait" },
  { "input": "Run a script and wait until it finishes", "output": "./myscript.sh & wait" },
  { "input": "Wait for specific process ID 1234", "output": "wait 1234" },
  { "input": "Run ping and sleep in background, then wait", "output": "ping -c 3 google.com & sleep 5 & wait" },
  { "input": "Start three jobs and wait for them", "output": "job1 & job2 & job3 & wait" },
  { "input": "Wait for process with PID stored in a variable", "output": "wait $pid" },
  { "input": "Run background process and wait before exit", "output": "long_task & wait" },
  { "input": "Wait until background compilation completes", "output": "gcc file.c & wait" },
  { "input": "Start a command, get PID, and wait", "output": "sleep 3 & pid=$!; wait $pid" },

  { "input": "Download file in background and wait for it", "output": "wget file.zip & wait" },
  { "input": "Wait for two background sleep commands", "output": "sleep 2 & sleep 4 & wait" },
  { "input": "Wait for a job started in subshell", "output": "(sleep 5) & wait" },
  { "input": "Wait for process that runs after a fork", "output": "./child_process & wait" },
  { "input": "Launch function in background and wait", "output": "myfunc & wait" },
  { "input": "Start service in background and wait", "output": "start_service.sh & wait" },
  { "input": "Run curl in background and wait", "output": "curl example.com & wait" },
  { "input": "Run two scripts and wait until both are done", "output": "./script1.sh & ./script2.sh & wait" },
  { "input": "Start make command in background and wait", "output": "make & wait" },
  { "input": "Run Python script in background and wait", "output": "python3 app.py & wait" },

  { "input": "Wait for a shell function launched in background", "output": "f() { sleep 1; }; f & wait" },
  { "input": "Wait for all background processes in loop", "output": "for i in {1..3}; do sleep $i & done; wait" },
  { "input": "Use wait in a bash trap handler", "output": "trap 'wait' EXIT" },
  { "input": "Wait for background tar compression", "output": "tar czf archive.tar.gz dir/ & wait" },
  { "input": "Run multiple commands in background and wait", "output": "{ ls; sleep 2; } & wait" },
  { "input": "Background a while loop and wait", "output": "while true; do sleep 1; done & wait" },
  { "input": "Start xargs in background and wait", "output": "cat files.txt | xargs -n1 -P4 cp & wait" },
  { "input": "Fork a subshell process and wait", "output": "(echo hello; sleep 2) & wait" },
  { "input": "Background rsync and wait", "output": "rsync -a src/ dst/ & wait" },
  { "input": "Run docker build and wait", "output": "docker build . & wait" },

  { "input": "Launch two background tasks and wait after both", "output": "cmd1 & pid1=$!; cmd2 & pid2=$!; wait $pid1 $pid2" },
  { "input": "Run sleep and echo in background, then wait", "output": "sleep 3 & echo done & wait" },
  { "input": "Run SSH command in background and wait", "output": "ssh user@host 'uptime' & wait" },
  { "input": "Run scp in background and wait", "output": "scp file user@host:/tmp/ & wait" },
  { "input": "Wait for function background execution", "output": "do_something() { sleep 1; }; do_something & wait" },
  { "input": "Background npm install and wait", "output": "npm install & wait" },
  { "input": "Sleep in background and wait on its PID", "output": "sleep 2 & pid=$!; wait $pid" },
  { "input": "Run loop with background tasks and wait", "output": "for i in {1..3}; do sleep $i & done; wait" },
  { "input": "Start script1 and script2 and wait for both", "output": "./script1.sh & ./script2.sh & wait" },
  { "input": "Background find command and wait", "output": "find / -name test.txt & wait" },

  { "input": "Run ping on multiple hosts and wait", "output": "ping -c 1 google.com & ping -c 1 bing.com & wait" },
  { "input": "Wait after background docker run", "output": "docker run nginx & wait" },
  { "input": "Start a script with sudo and wait", "output": "sudo ./admin_script.sh & wait" },
  { "input": "Forked command and wait", "output": "(command &) && wait" },
  { "input": "Run file copy in background and wait", "output": "cp file1 file2 & wait" },
  { "input": "Wait for a detached job to complete", "output": "longjob.sh & wait" },
  { "input": "Background a C program and wait", "output": "./a.out & wait" },
  { "input": "Run background bash block and wait", "output": "{ echo 1; sleep 2; } & wait" },
  { "input": "Use wait with multiple PIDs", "output": "cmd1 & pid1=$!; cmd2 & pid2=$!; wait $pid1 $pid2" },
  { "input": "Background rsync and wait for it", "output": "rsync -a /src /dst & wait" },

  { "input": "Wait for command that outputs PID", "output": "command & pid=$!; wait $pid" },
  { "input": "Start sleep and notify completion", "output": "sleep 2 & wait; echo 'done'" },
  { "input": "Run curl in background and wait with echo", "output": "curl https://example.com & wait; echo 'fetched'" },
  { "input": "Run long job and notify after wait", "output": "longjob & wait; echo finished" },
  { "input": "Use wait inside a function", "output": "myfunc() { command1 & command2 & wait; }; myfunc" },
  { "input": "Wait for completion after gzip", "output": "gzip bigfile & wait" },
  { "input": "Wait on background sleep", "output": "sleep 5 & wait" },
  { "input": "Wait for process using saved PID", "output": "cmd & pid=$!; wait $pid" },
  { "input": "Run sleep with timeout and wait", "output": "timeout 5s sleep 10 & wait" },
  { "input": "Run build.sh in background and wait", "output": "./build.sh & wait" },

  { "input": "Background a job and show exit code after wait", "output": "myjob & wait; echo $?" },
  { "input": "Use wait for job in pipeline", "output": "cat file | grep text & wait" },
  { "input": "Fork subshell and wait", "output": "(ls; sleep 1) & wait" },
  { "input": "Sleep command and wait in script", "output": "sleep 4 & wait" },
  { "input": "Wait after kill command", "output": "kill $pid & wait" },
  { "input": "Start sleep and use echo after wait", "output": "sleep 1 & wait; echo done" },
  { "input": "Multiple background tasks with wait", "output": "cmd1 & cmd2 & wait" },
  { "input": "Check job with PID then wait", "output": "longrun & pid=$!; wait $pid" },
  { "input": "Wait after background file deletion", "output": "rm -rf temp/ & wait" },
  { "input": "Use wait in shell script after background process", "output": "#!/bin/bash\nsleep 2 &\nwait\necho Done" }
]
