[
  { "input": "Start a new tmux session", "output": "tmux" },
  { "input": "Create a new tmux session named 'work'", "output": "tmux new -s work" },
  { "input": "List all tmux sessions", "output": "tmux ls" },
  { "input": "Attach to the last used tmux session", "output": "tmux attach" },
  { "input": "Attach to a tmux session named 'dev'", "output": "tmux attach -t dev" },
  { "input": "Kill a tmux session named 'test'", "output": "tmux kill-session -t test" },
  { "input": "Rename current tmux session to 'main'", "output": "tmux rename-session -t 0 main" },
  { "input": "Detach from the current tmux session", "output": "Ctrl-b d" },
  { "input": "Split tmux window vertically", "output": "Ctrl-b %" },
  { "input": "Split tmux window horizontally", "output": "Ctrl-b \"" },

  { "input": "Create a new window in tmux", "output": "Ctrl-b c" },
  { "input": "Switch to the next window in tmux", "output": "Ctrl-b n" },
  { "input": "Switch to previous window in tmux", "output": "Ctrl-b p" },
  { "input": "List all windows in tmux", "output": "Ctrl-b w" },
  { "input": "Kill the current tmux window", "output": "Ctrl-b &" },
  { "input": "Kill the current tmux pane", "output": "Ctrl-b x" },
  { "input": "Resize current pane upwards", "output": "Ctrl-b :resize-pane -U 5" },
  { "input": "Resize current pane downwards", "output": "Ctrl-b :resize-pane -D 5" },
  { "input": "Move to the pane on the right", "output": "Ctrl-b →" },
  { "input": "Move to the pane on the left", "output": "Ctrl-b ←" },

  { "input": "Start tmux session with shell script", "output": "tmux new -s backup './backup.sh'" },
  { "input": "Create and detach tmux session named 'logs'", "output": "tmux new -d -s logs" },
  { "input": "Kill all tmux sessions", "output": "tmux kill-server" },
  { "input": "Scroll up in tmux", "output": "Ctrl-b [" },
  { "input": "Create a session with logging enabled", "output": "tmux new -s logsession" },
  { "input": "Send command to tmux session", "output": "tmux send-keys -t logs 'ls -l' C-m" },
  { "input": "Start a Python REPL in tmux session", "output": "tmux new -s py python3" },
  { "input": "Run a node server in tmux", "output": "tmux new -s server 'node app.js'" },
  { "input": "Start a detached tmux session running top", "output": "tmux new -d -s top 'top'" },
  { "input": "Display all tmux key bindings", "output": "Ctrl-b ?" },

  { "input": "Switch to window 1", "output": "Ctrl-b 1" },
  { "input": "Switch to window 0", "output": "Ctrl-b 0" },
  { "input": "Rename current window", "output": "Ctrl-b ," },
  { "input": "Toggle between last two windows", "output": "Ctrl-b l" },
  { "input": "Detach from tmux safely", "output": "Ctrl-b d" },
  { "input": "Reload tmux configuration", "output": "tmux source-file ~/.tmux.conf" },
  { "input": "Send Ctrl+C to pane", "output": "tmux send-keys -t dev C-c" },
  { "input": "Paste from tmux buffer", "output": "Ctrl-b ]" },
  { "input": "Enter command mode in tmux", "output": "Ctrl-b :" },
  { "input": "List all panes in current window", "output": "Ctrl-b q" },

  { "input": "Zoom in on current pane", "output": "Ctrl-b z" },
  { "input": "Create new session and run bash", "output": "tmux new-session -s shell bash" },
  { "input": "Reattach to named session 'ml'", "output": "tmux attach -t ml" },
  { "input": "Kill tmux window by name", "output": "tmux kill-window -t 1" },
  { "input": "Capture tmux screen output", "output": "tmux capture-pane -S -" },
  { "input": "Save captured output to file", "output": "tmux save-buffer ~/tmux-buffer.txt" },
  { "input": "Paste last yanked buffer", "output": "tmux paste-buffer" },
  { "input": "Send multiple commands to tmux session", "output": "tmux send-keys -t shell 'cd / && ls' C-m" },
  { "input": "Create session in detached mode", "output": "tmux new-session -d -s silent" },
  { "input": "Run long task in tmux", "output": "tmux new -s job 'sleep 300'" },

  { "input": "Run htop inside tmux", "output": "tmux new -s sys htop" },
  { "input": "Run Flask app in tmux", "output": "tmux new -s flask 'flask run'" },
  { "input": "Monitor logs with tail inside tmux", "output": "tmux new -s logs 'tail -f /var/log/syslog'" },
  { "input": "Move current pane to a new window", "output": "Ctrl-b ! " },
  { "input": "Switch pane layout to even-horizontal", "output": "Ctrl-b Space" },
  { "input": "Toggle pane synchronization", "output": "Ctrl-b :setw synchronize-panes" },
  { "input": "View all current bindings", "output": "Ctrl-b ?" },
  { "input": "Detach session from remote server", "output": "Ctrl-b d" },
  { "input": "Exit tmux session", "output": "exit" },
  { "input": "Lock tmux session", "output": "Ctrl-b :" },

  { "input": "Change prefix key in tmux config", "output": "set-option -g prefix C-a" },
  { "input": "Send input to specific pane", "output": "tmux send-keys -t 0.1 'uptime' C-m" },
  { "input": "List active tmux clients", "output": "tmux list-clients" },
  { "input": "Kill a specific window", "output": "tmux kill-window -t 2" },
  { "input": "Kill a specific pane", "output": "tmux kill-pane -t 0.1" },
  { "input": "Move to pane on the bottom", "output": "Ctrl-b ↓" },
  { "input": "Move to pane on the top", "output": "Ctrl-b ↑" },
  { "input": "Send enter key to pane", "output": "tmux send-keys -t dev C-m" },
  { "input": "Send custom command to running pane", "output": "tmux send-keys -t logs 'df -h' C-m" },
  { "input": "Switch to last session", "output": "tmux switch-client -l" },

  { "input": "Start tmux from crontab", "output": "@reboot tmux new -d -s boot '/usr/bin/python3 boot.py'" },
  { "input": "Bind a new key to split window", "output": "bind | split-window -h" },
  { "input": "Customize tmux status bar", "output": "set -g status-bg black" },
  { "input": "Highlight current window", "output": "setw -g window-status-current-bg blue" },
  { "input": "Set automatic window renaming", "output": "set -g allow-rename on" },
  { "input": "Disable automatic rename", "output": "set-option -g allow-rename off" },
  { "input": "Clear tmux scrollback history", "output": "tmux clear-history" },
  { "input": "Select pane using numbers", "output": "Ctrl-b q" },
  { "input": "Resize pane left", "output": "Ctrl-b :resize-pane -L 10" },
  { "input": "Resize pane right", "output": "Ctrl-b :resize-pane -R 10" }
]
