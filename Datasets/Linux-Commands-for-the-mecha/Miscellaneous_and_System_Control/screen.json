[
  { "input": "Start a new screen session", "output": "screen" },
  { "input": "Create a new screen session named 'myjob'", "output": "screen -S myjob" },
  { "input": "List all active screen sessions", "output": "screen -ls" },
  { "input": "Reattach to the most recent screen session", "output": "screen -r" },
  { "input": "Reattach to a screen session with ID 1234", "output": "screen -r 1234" },
  { "input": "Start screen session that runs top", "output": "screen -S monitor top" },
  { "input": "Detach from current screen session", "output": "Ctrl-a d" },
  { "input": "Kill a screen session named 'test'", "output": "screen -S test -X quit" },
  { "input": "Start a new session named backup", "output": "screen -S backup" },
  { "input": "Reconnect to screen session 'data'", "output": "screen -r data" },

  { "input": "Start a screen session and run python3", "output": "screen -S pyenv python3" },
  { "input": "Check screen sessions", "output": "screen -ls" },
  { "input": "Kill all screen sessions", "output": "pkill screen" },
  { "input": "Start screen and run shell script", "output": "screen -S updates ./update.sh" },
  { "input": "Create screen session and run ping", "output": "screen -S netwatch ping 8.8.8.8" },
  { "input": "Exit screen session", "output": "exit" },
  { "input": "Detach using keyboard", "output": "Ctrl-a d" },
  { "input": "Reattach screen with partial name", "output": "screen -r myjob" },
  { "input": "Use screen for persistent command", "output": "screen -S longtask sleep 1000" },
  { "input": "Detach and logout", "output": "Ctrl-a d && exit" },

  { "input": "Send command to screen session", "output": "screen -S mysession -X stuff 'ls\\n'" },
  { "input": "Start screen session for logs", "output": "screen -S logs tail -f /var/log/syslog" },
  { "input": "Kill screen by session ID", "output": "screen -X -S 1234.pts-0.hostname quit" },
  { "input": "Create screen for background process", "output": "screen -S downloader wget largefile.zip" },
  { "input": "Reattach to named screen", "output": "screen -r monitor" },
  { "input": "List screen sessions before reconnecting", "output": "screen -ls" },
  { "input": "Start interactive bash in screen", "output": "screen -S shell bash" },
  { "input": "Run custom job inside screen", "output": "screen -S job ./job.sh" },
  { "input": "Screen session for machine learning training", "output": "screen -S training python train.py" },
  { "input": "Detach screen after running", "output": "Ctrl-a d" },

  { "input": "Send Ctrl+C to screen session", "output": "screen -S mysession -X stuff '^C'" },
  { "input": "Create a screen that auto logs output", "output": "screen -L -S outputlog" },
  { "input": "Run tail -f in a screen", "output": "screen -S watch tail -f /var/log/messages" },
  { "input": "Use screen to run a long simulation", "output": "screen -S sim python simulate.py" },
  { "input": "Exit from screen completely", "output": "exit" },
  { "input": "Use screen in interactive mode", "output": "screen -S interactive" },
  { "input": "Start screen and log everything", "output": "screen -L -S full_log" },
  { "input": "Send restart command to screen", "output": "screen -S nginx -X stuff 'sudo systemctl restart nginx\\n'" },
  { "input": "Start screen for database shell", "output": "screen -S mysql mysql -u root -p" },
  { "input": "Monitor system with screen and htop", "output": "screen -S sysmon htop" },

  { "input": "Check how many screen sessions are open", "output": "screen -ls" },
  { "input": "Start screen for text editor", "output": "screen -S editor nano file.txt" },
  { "input": "Automatically run top in screen", "output": "screen -dmS watchtop top" },
  { "input": "Screen session for git pull", "output": "screen -S deploy git pull" },
  { "input": "Run screen session with interactive bash", "output": "screen -S dev bash" },
  { "input": "Kill screen by name", "output": "screen -X -S training quit" },
  { "input": "Detach screen with keyboard", "output": "Ctrl-a d" },
  { "input": "Use screen for persistent SSH", "output": "screen -S sshsession ssh user@host" },
  { "input": "Run Django server inside screen", "output": "screen -S django python manage.py runserver" },
  { "input": "Use screen to test code interactively", "output": "screen -S testenv python3" },

  { "input": "Screen for monitoring cron logs", "output": "screen -S cronlogs tail -f /var/log/cron.log" },
  { "input": "Run screen for Docker logs", "output": "screen -S dockerlogs docker logs -f mycontainer" },
  { "input": "Reattach screen by session name", "output": "screen -r dockerlogs" },
  { "input": "Start screen for CPU benchmark", "output": "screen -S benchmark stress --cpu 4" },
  { "input": "Detach using Ctrl command", "output": "Ctrl-a d" },
  { "input": "Reattach latest screen if only one", "output": "screen -r" },
  { "input": "Screen for editing files", "output": "screen -S edit vim main.py" },
  { "input": "Create a silent screen session", "output": "screen -dmS silentjob" },
  { "input": "Run background command in screen", "output": "screen -dmS backup ./backup.sh" },
  { "input": "Run log parsing with screen", "output": "screen -S parser python parse_logs.py" },

  { "input": "Screen for automation script", "output": "screen -S autoscript ./auto.sh" },
  { "input": "Automatically start and detach screen", "output": "screen -dmS detached echo 'hi'" },
  { "input": "Use screen with name and command", "output": "screen -S monitor bash monitor.sh" },
  { "input": "Send input to screen session", "output": "screen -S autoscript -X stuff 'q\\n'" },
  { "input": "Quick start screen and detach", "output": "screen -dmS quicktop top" },
  { "input": "Kill screen after task", "output": "screen -S deploy -X quit" },
  { "input": "Start Python REPL with screen", "output": "screen -S repl python3" },
  { "input": "Run node server with screen", "output": "screen -S node node server.js" },
  { "input": "Run Go app in screen session", "output": "screen -S goapp ./app" },
  { "input": "Run TensorFlow training in screen", "output": "screen -S tf python train.py" },

  { "input": "Create a session that logs to file", "output": "screen -L -S logfile" },
  { "input": "Start bash shell with screen", "output": "screen -S shell bash" },
  { "input": "Send Ctrl+D to session", "output": "screen -S shell -X stuff '^D'" },
  { "input": "View logs from screen session", "output": "less screenlog.0" },
  { "input": "Monitor CPU temp inside screen", "output": "screen -S cputemp watch sensors" },
  { "input": "Run remote job with screen", "output": "screen -S remote ssh user@server 'longtask.sh'" },
  { "input": "Create minimal screen session", "output": "screen -dmS temp" },
  { "input": "Screen for live disk usage", "output": "screen -S duwatch watch df -h" },
  { "input": "Start Redis server in screen", "output": "screen -S redis redis-server" },
  { "input": "Run system upgrade inside screen", "output": "screen -S upgrade sudo apt update && sudo apt upgrade" }
]
