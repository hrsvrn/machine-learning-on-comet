[
  { "input": "Show all environment variables", "output": "env" },
  { "input": "Display the current environment", "output": "env" },
  { "input": "List environment variables in the terminal", "output": "env" },
  { "input": "Print current shell environment", "output": "env" },
  { "input": "Check PATH variable and others", "output": "env" },
  { "input": "Display all environment settings", "output": "env" },
  { "input": "Get a list of all current environment variables", "output": "env" },
  { "input": "Print the shellâ€™s environment", "output": "env" },
  { "input": "Show environment settings used by shell", "output": "env" },
  { "input": "List variables like HOME, PATH, and USER", "output": "env" },

  { "input": "Print all exported variables", "output": "env" },
  { "input": "Display all session variables", "output": "env" },
  { "input": "View full environment details", "output": "env" },
  { "input": "Show all set environment values", "output": "env" },
  { "input": "Check exported shell variables", "output": "env" },
  { "input": "See what's in the environment", "output": "env" },
  { "input": "Show env without running a command", "output": "env" },
  { "input": "Display login environment", "output": "env" },
  { "input": "Print list of active variables", "output": "env" },
  { "input": "Print current environment snapshot", "output": "env" },

  { "input": "Run a command with a modified environment", "output": "env VAR=value command" },
  { "input": "Run 'node' with a custom NODE_ENV value", "output": "env NODE_ENV=production node" },
  { "input": "Set TEMP=123 for a python script", "output": "env TEMP=123 python script.py" },
  { "input": "Execute echo with HELLO=world", "output": "env HELLO=world echo $HELLO" },
  { "input": "Run ls with a fake PATH", "output": "env PATH=/fake/bin ls" },
  { "input": "Set DEBUG=true and run app.js", "output": "env DEBUG=true node app.js" },
  { "input": "Launch bash with FOO=bar", "output": "env FOO=bar bash" },
  { "input": "Run curl with proxy set", "output": "env http_proxy=http://proxy curl example.com" },
  { "input": "Run command with LANG=C", "output": "env LANG=C command" },
  { "input": "Temporarily change environment for a command", "output": "env VAR1=value1 VAR2=value2 some_command" },

  { "input": "Use env to print variables before running program", "output": "env VAR=xyz ./program" },
  { "input": "Run a python script with custom ENV", "output": "env ENV=dev python script.py" },
  { "input": "Test a script with LOG_LEVEL=debug", "output": "env LOG_LEVEL=debug ./test.sh" },
  { "input": "Start Node.js server with PORT=8080", "output": "env PORT=8080 node server.js" },
  { "input": "Set HOME to /tmp while running ls", "output": "env HOME=/tmp ls" },
  { "input": "Run echo with a modified USER variable", "output": "env USER=testuser echo $USER" },
  { "input": "Run a C program with a custom environment", "output": "env VAR1=1 VAR2=2 ./a.out" },
  { "input": "Check if variable DEBUG is set during execution", "output": "env DEBUG=true echo $DEBUG" },
  { "input": "Set ENVIRONMENT=staging before running shell", "output": "env ENVIRONMENT=staging bash" },
  { "input": "Run Go app with ENV vars", "output": "env DB_USER=root DB_PASS=secret go run main.go" },

  { "input": "List environment variables in CI pipeline", "output": "env" },
  { "input": "Show available variables for docker run", "output": "env" },
  { "input": "Dump environment before running deployment script", "output": "env" },
  { "input": "Run make with CFLAGS defined in env", "output": "env CFLAGS=-O2 make" },
  { "input": "Run shell with restricted variables", "output": "env -i bash" },
  { "input": "Print empty environment", "output": "env -i" },
  { "input": "Clear all environment vars and start shell", "output": "env -i /bin/sh" },
  { "input": "Run command with empty environment", "output": "env -i command" },
  { "input": "Use env to simulate clean environment", "output": "env -i VAR=1 command" },
  { "input": "Run command without inheriting any variables", "output": "env -i SOME=thing ./app" },

  { "input": "Show PATH using env", "output": "env | grep PATH" },
  { "input": "Filter env for JAVA_HOME", "output": "env | grep JAVA_HOME" },
  { "input": "Get only SHELL environment var", "output": "env | grep SHELL" },
  { "input": "Check if TERM is set", "output": "env | grep TERM" },
  { "input": "Find all variables starting with LC_", "output": "env | grep '^LC_'" },
  { "input": "Print the DISPLAY variable from env", "output": "env | grep DISPLAY" },
  { "input": "Verify USER variable in environment", "output": "env | grep USER" },
  { "input": "See if EDITOR is set", "output": "env | grep EDITOR" },
  { "input": "Show LANG value", "output": "env | grep LANG" },
  { "input": "Look for PYTHONPATH in env", "output": "env | grep PYTHONPATH" },

  { "input": "Start shell with VAR1=value1 and no other env", "output": "env -i VAR1=value1 bash" },
  { "input": "Start python with only PATH and HOME set", "output": "env -i PATH=$PATH HOME=$HOME python" },
  { "input": "Debug a failing script with minimal environment", "output": "env -i DEBUG=true ./script.sh" },
  { "input": "Run sudo command with clean environment", "output": "sudo env -i command" },
  { "input": "Set environment and run as different user", "output": "sudo -u user env VAR=value command" },
  { "input": "Use env to simulate cron job environment", "output": "env -i PATH=/usr/bin:/bin ./cron_script.sh" },
  { "input": "Use env in Makefile to set variables", "output": "env VAR=val make" },
  { "input": "Inject config variables via env before running script", "output": "env CONFIG_PATH=/etc/config.json script.sh" },
  { "input": "Run script with temporary proxy settings", "output": "env http_proxy=http://127.0.0.1:3128 ./script.sh" },
  { "input": "Set multiple variables before launching GUI app", "output": "env QT_DEBUG_PLUGINS=1 LANG=en_US.UTF-8 ./gui-app" },

  { "input": "Run 'printenv' with env", "output": "env printenv" },
  { "input": "Print env and write to file", "output": "env > env_dump.txt" },
  { "input": "Redirect environment output", "output": "env > myenv.txt" },
  { "input": "Print and count environment variables", "output": "env | wc -l" },
  { "input": "Print specific environment variable using env and grep", "output": "env | grep HOME" },
  { "input": "Export custom variable and print env", "output": "env MYVAR=hello env" },
  { "input": "Run a docker container with custom ENV", "output": "docker run -e VAR=value alpine env" },
  { "input": "Set custom environment in ssh session", "output": "env VAR1=abc ssh user@host" },
  { "input": "Compare environments of two users", "output": "sudo -u user1 env; sudo -u user2 env" },
  { "input": "Temporarily override environment for one command", "output": "env TEMP=value ./script.sh" }
]
