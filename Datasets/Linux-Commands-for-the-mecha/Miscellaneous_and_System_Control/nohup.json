[
  { "input": "Run a script in background without hangup", "output": "nohup ./myscript.sh &" },
  { "input": "Run Python app with nohup", "output": "nohup python3 app.py &" },
  { "input": "Start long-running process with nohup", "output": "nohup longtask.sh &" },
  { "input": "Run backup script and ignore terminal hangups", "output": "nohup ./backup.sh &" },
  { "input": "Run a shell command persistently", "output": "nohup bash -c 'while true; do echo hello; sleep 1; done' &" },
  { "input": "Run server.js using node in background", "output": "nohup node server.js &" },
  { "input": "Launch a ping and let it keep running", "output": "nohup ping 8.8.8.8 > ping.log 2>&1 &" },
  { "input": "Run curl without interruption", "output": "nohup curl https://example.com &" },
  { "input": "Execute top and persist after logout", "output": "nohup top &" },
  { "input": "Run Java program in background safely", "output": "nohup java -jar app.jar &" },

  { "input": "Run C compiled program using nohup", "output": "nohup ./a.out &" },
  { "input": "Download large file without hangup", "output": "nohup wget http://example.com/bigfile.zip &" },
  { "input": "Run make command detached", "output": "nohup make build &" },
  { "input": "Run R script detached from terminal", "output": "nohup Rscript analysis.R &" },
  { "input": "Run ssh persistently", "output": "nohup ssh user@remotehost &" },
  { "input": "Run sleep command with nohup", "output": "nohup sleep 1000 &" },
  { "input": "Start gunicorn server safely", "output": "nohup gunicorn app:app &" },
  { "input": "Run Ruby script with nohup", "output": "nohup ruby script.rb &" },
  { "input": "Start Django server in background", "output": "nohup python manage.py runserver &" },
  { "input": "Run npm start detached", "output": "nohup npm start &" },

  { "input": "Run Flask app without interruption", "output": "nohup flask run &" },
  { "input": "Start background ffmpeg recording", "output": "nohup ffmpeg -i input.mp4 output.avi &" },
  { "input": "Run system update script persistently", "output": "nohup ./update.sh &" },
  { "input": "Start Jupyter server via nohup", "output": "nohup jupyter notebook &" },
  { "input": "Run shell loop without hangup", "output": "nohup bash -c 'while true; do date; sleep 60; done' &" },
  { "input": "Start stress test in background", "output": "nohup stress --cpu 2 --timeout 60 &" },
  { "input": "Launch monitoring script with nohup", "output": "nohup ./monitor.sh &" },
  { "input": "Run Go app in background", "output": "nohup ./go_app &" },
  { "input": "Run backup job with redirected output", "output": "nohup ./backup.sh > backup.log 2>&1 &" },
  { "input": "Run perl script safely", "output": "nohup perl script.pl &" },

  { "input": "Run rsync job in background", "output": "nohup rsync -avz source/ dest/ &" },
  { "input": "Start MongoDB in background", "output": "nohup mongod &" },
  { "input": "Start Python script with log", "output": "nohup python script.py > out.log 2>&1 &" },
  { "input": "Start data scraping in background", "output": "nohup python scraper.py &" },
  { "input": "Use nohup to run sleep 500", "output": "nohup sleep 500 &" },
  { "input": "Run infinite ping persistently", "output": "nohup ping google.com > ping_output.txt 2>&1 &" },
  { "input": "Run training script overnight", "output": "nohup python train.py &" },
  { "input": "Start tail on log file in background", "output": "nohup tail -f /var/log/syslog &" },
  { "input": "Run kubectl command persistently", "output": "nohup kubectl get pods -w &" },
  { "input": "Start flask app and log output", "output": "nohup flask run > flask.log 2>&1 &" },

  { "input": "Launch git pull with nohup", "output": "nohup git pull &" },
  { "input": "Run PostgreSQL server in background", "output": "nohup postgres &" },
  { "input": "Start simple http server in Python", "output": "nohup python3 -m http.server &" },
  { "input": "Execute batch job safely", "output": "nohup ./batch_job.sh &" },
  { "input": "Run kafka producer with nohup", "output": "nohup kafka-console-producer.sh --topic test &" },
  { "input": "Run spark job with nohup", "output": "nohup spark-submit job.py &" },
  { "input": "Run celery worker detached", "output": "nohup celery -A app worker &" },
  { "input": "Run ansible playbook with nohup", "output": "nohup ansible-playbook deploy.yml &" },
  { "input": "Keep syncing files in loop", "output": "nohup bash sync_loop.sh &" },
  { "input": "Start node app and redirect logs", "output": "nohup node index.js > app.log 2>&1 &" },

  { "input": "Run docker-compose with nohup", "output": "nohup docker-compose up &" },
  { "input": "Run model inference job in background", "output": "nohup python infer.py &" },
  { "input": "Execute cron task manually with nohup", "output": "nohup ./cronjob.sh &" },
  { "input": "Start long-running grep in background", "output": "nohup grep -r 'pattern' / &" },
  { "input": "Run time-consuming job quietly", "output": "nohup ./longjob.sh > /dev/null 2>&1 &" },
  { "input": "Run a command that takes 1 hour", "output": "nohup bash -c 'sleep 3600' &" },
  { "input": "Keep echoing time every 10 seconds", "output": "nohup bash -c 'while true; do date; sleep 10; done' &" },
  { "input": "Persist background tar compression", "output": "nohup tar czf backup.tar.gz /data &" },
  { "input": "Run SSH tunnel persistently", "output": "nohup ssh -N -L 8080:localhost:80 user@host &" },
  { "input": "Start X server using nohup", "output": "nohup startx &" },

  { "input": "Run bash script and log output", "output": "nohup ./script.sh > out.log 2>&1 &" },
  { "input": "Execute training.py with nohup", "output": "nohup python training.py &" },
  { "input": "Run command inside tmux with nohup", "output": "nohup tmux new-session -d 'top'" },
  { "input": "Run ping and save result", "output": "nohup ping 1.1.1.1 > log.txt &" },
  { "input": "Run Docker container restart script", "output": "nohup ./restart_docker.sh &" },
  { "input": "Start distributed job via nohup", "output": "nohup mpirun -np 4 ./parallel_job &" },
  { "input": "Run nginx start script safely", "output": "nohup ./start_nginx.sh &" },
  { "input": "Background cleanup script", "output": "nohup ./cleanup.sh &" },
  { "input": "Keep running network monitor script", "output": "nohup ./net_monitor.sh &" },
  { "input": "Use nohup for delay loop", "output": "nohup bash -c 'while true; do sleep 60; done' &" },

  { "input": "Run tmux session start script", "output": "nohup ./start_tmux.sh &" },
  { "input": "Persist update check in background", "output": "nohup ./check_updates.sh &" },
  { "input": "Start camera recording via script", "output": "nohup ./record.sh &" },
  { "input": "Execute daemon manually", "output": "nohup ./daemon.sh &" },
  { "input": "Run Java process and log", "output": "nohup java -cp . MainClass > out.txt 2>&1 &" },
  { "input": "Run test automation in background", "output": "nohup ./run_tests.sh &" },
  { "input": "Perform sync via script", "output": "nohup ./sync_data.sh &" },
  { "input": "Start log rotation manually", "output": "nohup ./rotate_logs.sh &" },
  { "input": "Persist environment diagnostics", "output": "nohup ./env_check.sh &" },
  { "input": "Run bot in background", "output": "nohup python bot.py &" }
]
