[
  { "input": "Start the nginx service", "output": "systemctl start nginx" },
  { "input": "Stop the mysql service", "output": "systemctl stop mysql" },
  { "input": "Restart the apache2 service", "output": "systemctl restart apache2" },
  { "input": "Reload the sshd service", "output": "systemctl reload sshd" },
  { "input": "Enable the docker service to start at boot", "output": "systemctl enable docker" },
  { "input": "Disable the bluetooth service", "output": "systemctl disable bluetooth" },
  { "input": "Check the status of the nginx service", "output": "systemctl status nginx" },
  { "input": "List all running services", "output": "systemctl list-units --type=service --state=running" },
  { "input": "List all enabled services", "output": "systemctl list-unit-files --state=enabled" },
  { "input": "Mask the telnet service to prevent it from being started", "output": "systemctl mask telnet" },
  { "input": "Unmask the telnet service", "output": "systemctl unmask telnet" },
  { "input": "Restart the NetworkManager service", "output": "systemctl restart NetworkManager" },
  { "input": "Start the postgresql service", "output": "systemctl start postgresql" },
  { "input": "Stop the ufw firewall service", "output": "systemctl stop ufw" },
  { "input": "Enable apache2 service to run at startup", "output": "systemctl enable apache2" },
  { "input": "Check if docker service is enabled", "output": "systemctl is-enabled docker" },
  { "input": "Check if nginx is active", "output": "systemctl is-active nginx" },
  { "input": "Show all failed services", "output": "systemctl --failed" },
  { "input": "Get list of all services", "output": "systemctl list-units --type=service" },
  { "input": "Restart sshd service with force", "output": "systemctl restart sshd" },

  { "input": "Show the status of all units", "output": "systemctl list-units" },
  { "input": "View all unit files", "output": "systemctl list-unit-files" },
  { "input": "Start the cron service", "output": "systemctl start cron" },
  { "input": "Stop the cups service", "output": "systemctl stop cups" },
  { "input": "Restart the rsyslog service", "output": "systemctl restart rsyslog" },
  { "input": "Reload systemd manager configuration", "output": "systemctl daemon-reexec" },
  { "input": "Re-execute systemd to reload configs", "output": "systemctl daemon-reexec" },
  { "input": "Reenable the ssh service", "output": "systemctl reenable ssh" },
  { "input": "Disable nginx from starting automatically", "output": "systemctl disable nginx" },
  { "input": "Show dependencies for the ssh service", "output": "systemctl list-dependencies ssh" },

  { "input": "Display the status of docker", "output": "systemctl status docker" },
  { "input": "Force stop apache2", "output": "systemctl stop apache2" },
  { "input": "Show all active units", "output": "systemctl list-units --state=active" },
  { "input": "Show systemctl version", "output": "systemctl --version" },
  { "input": "Start mysql service now", "output": "systemctl start mysql" },
  { "input": "Restart the snapd service", "output": "systemctl restart snapd" },
  { "input": "Check status of systemd-journald", "output": "systemctl status systemd-journald" },
  { "input": "Mask the telnet.socket", "output": "systemctl mask telnet.socket" },
  { "input": "Unmask the telnet.socket", "output": "systemctl unmask telnet.socket" },
  { "input": "Enable cron", "output": "systemctl enable cron" },

  { "input": "Reload cron service configuration", "output": "systemctl reload cron" },
  { "input": "Disable avahi-daemon service", "output": "systemctl disable avahi-daemon" },
  { "input": "Enable bluetooth service", "output": "systemctl enable bluetooth" },
  { "input": "Start smbd service", "output": "systemctl start smbd" },
  { "input": "Stop smbd service", "output": "systemctl stop smbd" },
  { "input": "Restart smbd service", "output": "systemctl restart smbd" },
  { "input": "Check if cron is enabled", "output": "systemctl is-enabled cron" },
  { "input": "Reload the apache2 service", "output": "systemctl reload apache2" },
  { "input": "List inactive services", "output": "systemctl list-units --type=service --state=inactive" },
  { "input": "Show dependencies of systemd", "output": "systemctl list-dependencies systemd" },

  { "input": "Stop a failing service 'failtest'", "output": "systemctl stop failtest" },
  { "input": "Unmask a previously masked service", "output": "systemctl unmask apache2" },
  { "input": "Enable and start NetworkManager", "output": "systemctl enable --now NetworkManager" },
  { "input": "Disable and stop postfix", "output": "systemctl disable --now postfix" },
  { "input": "Restart cups service quietly", "output": "systemctl restart cups" },
  { "input": "Reload all daemons", "output": "systemctl daemon-reexec" },
  { "input": "Display failed services", "output": "systemctl --failed" },
  { "input": "Enable fail2ban service", "output": "systemctl enable fail2ban" },
  { "input": "Stop fail2ban", "output": "systemctl stop fail2ban" },
  { "input": "Check if firewalld is active", "output": "systemctl is-active firewalld" }
]
